// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: schema.proto

package schema

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MessageType int32

const (
	MessageType_RESERVED    MessageType = 0
	MessageType_CONNECT     MessageType = 1
	MessageType_CONNACK     MessageType = 2
	MessageType_PUBLISH     MessageType = 3
	MessageType_PUBACK      MessageType = 4
	MessageType_PUBREC      MessageType = 5
	MessageType_PUBREL      MessageType = 6
	MessageType_PUBCOMP     MessageType = 7
	MessageType_SUBSCRIBE   MessageType = 8
	MessageType_SUBACK      MessageType = 9
	MessageType_UNSUBSCRIBE MessageType = 10
	MessageType_UNSUBACK    MessageType = 11
	MessageType_PINGREQ     MessageType = 12
	MessageType_PINGRESP    MessageType = 13
	MessageType_QUERY       MessageType = 14
	MessageType_RESULT      MessageType = 15
	MessageType_PUT         MessageType = 16
	MessageType_PUTRESP     MessageType = 17
	MessageType_DEL         MessageType = 18
	MessageType_DELRESP     MessageType = 19
	MessageType_DISCONNECT  MessageType = 20
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:  "RESERVED",
		1:  "CONNECT",
		2:  "CONNACK",
		3:  "PUBLISH",
		4:  "PUBACK",
		5:  "PUBREC",
		6:  "PUBREL",
		7:  "PUBCOMP",
		8:  "SUBSCRIBE",
		9:  "SUBACK",
		10: "UNSUBSCRIBE",
		11: "UNSUBACK",
		12: "PINGREQ",
		13: "PINGRESP",
		14: "QUERY",
		15: "RESULT",
		16: "PUT",
		17: "PUTRESP",
		18: "DEL",
		19: "DELRESP",
		20: "DISCONNECT",
	}
	MessageType_value = map[string]int32{
		"RESERVED":    0,
		"CONNECT":     1,
		"CONNACK":     2,
		"PUBLISH":     3,
		"PUBACK":      4,
		"PUBREC":      5,
		"PUBREL":      6,
		"PUBCOMP":     7,
		"SUBSCRIBE":   8,
		"SUBACK":      9,
		"UNSUBSCRIBE": 10,
		"UNSUBACK":    11,
		"PINGREQ":     12,
		"PINGRESP":    13,
		"QUERY":       14,
		"RESULT":      15,
		"PUT":         16,
		"PUTRESP":     17,
		"DEL":         18,
		"DELRESP":     19,
		"DISCONNECT":  20,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_schema_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{0}
}

type Packet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Packet) Reset() {
	*x = Packet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{1}
}

func (x *Packet) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ConnInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Address  string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ConnInfo) Reset() {
	*x = ConnInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnInfo) ProtoMessage() {}

func (x *ConnInfo) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnInfo.ProtoReflect.Descriptor instead.
func (*ConnInfo) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{2}
}

func (x *ConnInfo) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ConnInfo) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *ConnInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type InMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//	*InMsg_Pingreq
	//	*InMsg_Sub
	//	*InMsg_Unsub
	//	*InMsg_Pub
	//	*InMsg_Query
	//	*InMsg_Put
	//	*InMsg_Del
	Message isInMsg_Message `protobuf_oneof:"Message"`
}

func (x *InMsg) Reset() {
	*x = InMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InMsg) ProtoMessage() {}

func (x *InMsg) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InMsg.ProtoReflect.Descriptor instead.
func (*InMsg) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{3}
}

func (m *InMsg) GetMessage() isInMsg_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *InMsg) GetPingreq() *Pingreq {
	if x, ok := x.GetMessage().(*InMsg_Pingreq); ok {
		return x.Pingreq
	}
	return nil
}

func (x *InMsg) GetSub() *Subscribe {
	if x, ok := x.GetMessage().(*InMsg_Sub); ok {
		return x.Sub
	}
	return nil
}

func (x *InMsg) GetUnsub() *Unsubscribe {
	if x, ok := x.GetMessage().(*InMsg_Unsub); ok {
		return x.Unsub
	}
	return nil
}

func (x *InMsg) GetPub() *Publish {
	if x, ok := x.GetMessage().(*InMsg_Pub); ok {
		return x.Pub
	}
	return nil
}

func (x *InMsg) GetQuery() *QueryRequest {
	if x, ok := x.GetMessage().(*InMsg_Query); ok {
		return x.Query
	}
	return nil
}

func (x *InMsg) GetPut() *PutRequest {
	if x, ok := x.GetMessage().(*InMsg_Put); ok {
		return x.Put
	}
	return nil
}

func (x *InMsg) GetDel() *DeleteRequest {
	if x, ok := x.GetMessage().(*InMsg_Del); ok {
		return x.Del
	}
	return nil
}

type isInMsg_Message interface {
	isInMsg_Message()
}

type InMsg_Pingreq struct {
	Pingreq *Pingreq `protobuf:"bytes,1,opt,name=pingreq,proto3,oneof"`
}

type InMsg_Sub struct {
	Sub *Subscribe `protobuf:"bytes,2,opt,name=sub,proto3,oneof"`
}

type InMsg_Unsub struct {
	Unsub *Unsubscribe `protobuf:"bytes,3,opt,name=unsub,proto3,oneof"`
}

type InMsg_Pub struct {
	Pub *Publish `protobuf:"bytes,4,opt,name=pub,proto3,oneof"`
}

type InMsg_Query struct {
	Query *QueryRequest `protobuf:"bytes,5,opt,name=query,proto3,oneof"`
}

type InMsg_Put struct {
	Put *PutRequest `protobuf:"bytes,6,opt,name=put,proto3,oneof"`
}

type InMsg_Del struct {
	Del *DeleteRequest `protobuf:"bytes,7,opt,name=del,proto3,oneof"`
}

func (*InMsg_Pingreq) isInMsg_Message() {}

func (*InMsg_Sub) isInMsg_Message() {}

func (*InMsg_Unsub) isInMsg_Message() {}

func (*InMsg_Pub) isInMsg_Message() {}

func (*InMsg_Query) isInMsg_Message() {}

func (*InMsg_Put) isInMsg_Message() {}

func (*InMsg_Del) isInMsg_Message() {}

type OutMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//	*OutMsg_Pingresp
	//	*OutMsg_Suback
	//	*OutMsg_Unsuback
	//	*OutMsg_Pub
	//	*OutMsg_Puback
	//	*OutMsg_Resp
	//	*OutMsg_Putresp
	//	*OutMsg_Delresp
	Message isOutMsg_Message `protobuf_oneof:"Message"`
}

func (x *OutMsg) Reset() {
	*x = OutMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutMsg) ProtoMessage() {}

func (x *OutMsg) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutMsg.ProtoReflect.Descriptor instead.
func (*OutMsg) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{4}
}

func (m *OutMsg) GetMessage() isOutMsg_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *OutMsg) GetPingresp() *Pingresp {
	if x, ok := x.GetMessage().(*OutMsg_Pingresp); ok {
		return x.Pingresp
	}
	return nil
}

func (x *OutMsg) GetSuback() *Suback {
	if x, ok := x.GetMessage().(*OutMsg_Suback); ok {
		return x.Suback
	}
	return nil
}

func (x *OutMsg) GetUnsuback() *Unsuback {
	if x, ok := x.GetMessage().(*OutMsg_Unsuback); ok {
		return x.Unsuback
	}
	return nil
}

func (x *OutMsg) GetPub() *Publish {
	if x, ok := x.GetMessage().(*OutMsg_Pub); ok {
		return x.Pub
	}
	return nil
}

func (x *OutMsg) GetPuback() *Puback {
	if x, ok := x.GetMessage().(*OutMsg_Puback); ok {
		return x.Puback
	}
	return nil
}

func (x *OutMsg) GetResp() *QueryResponse {
	if x, ok := x.GetMessage().(*OutMsg_Resp); ok {
		return x.Resp
	}
	return nil
}

func (x *OutMsg) GetPutresp() *PutResponse {
	if x, ok := x.GetMessage().(*OutMsg_Putresp); ok {
		return x.Putresp
	}
	return nil
}

func (x *OutMsg) GetDelresp() *DeleteResponse {
	if x, ok := x.GetMessage().(*OutMsg_Delresp); ok {
		return x.Delresp
	}
	return nil
}

type isOutMsg_Message interface {
	isOutMsg_Message()
}

type OutMsg_Pingresp struct {
	Pingresp *Pingresp `protobuf:"bytes,1,opt,name=pingresp,proto3,oneof"`
}

type OutMsg_Suback struct {
	Suback *Suback `protobuf:"bytes,2,opt,name=suback,proto3,oneof"`
}

type OutMsg_Unsuback struct {
	Unsuback *Unsuback `protobuf:"bytes,3,opt,name=unsuback,proto3,oneof"`
}

type OutMsg_Pub struct {
	Pub *Publish `protobuf:"bytes,4,opt,name=pub,proto3,oneof"`
}

type OutMsg_Puback struct {
	Puback *Puback `protobuf:"bytes,5,opt,name=puback,proto3,oneof"`
}

type OutMsg_Resp struct {
	Resp *QueryResponse `protobuf:"bytes,6,opt,name=resp,proto3,oneof"`
}

type OutMsg_Putresp struct {
	Putresp *PutResponse `protobuf:"bytes,7,opt,name=putresp,proto3,oneof"`
}

type OutMsg_Delresp struct {
	Delresp *DeleteResponse `protobuf:"bytes,8,opt,name=delresp,proto3,oneof"`
}

func (*OutMsg_Pingresp) isOutMsg_Message() {}

func (*OutMsg_Suback) isOutMsg_Message() {}

func (*OutMsg_Unsuback) isOutMsg_Message() {}

func (*OutMsg_Pub) isOutMsg_Message() {}

func (*OutMsg_Puback) isOutMsg_Message() {}

func (*OutMsg_Resp) isOutMsg_Message() {}

func (*OutMsg_Putresp) isOutMsg_Message() {}

func (*OutMsg_Delresp) isOutMsg_Message() {}

type FixedHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType     MessageType `protobuf:"varint,1,opt,name=messageType,proto3,enum=unitdb.schema.MessageType" json:"messageType,omitempty"`
	Dup             bool        `protobuf:"varint,2,opt,name=dup,proto3" json:"dup,omitempty"`
	Qos             int32       `protobuf:"varint,3,opt,name=qos,proto3" json:"qos,omitempty"`
	Retain          bool        `protobuf:"varint,4,opt,name=retain,proto3" json:"retain,omitempty"`
	RemainingLength int32       `protobuf:"varint,5,opt,name=remainingLength,proto3" json:"remainingLength,omitempty"`
}

func (x *FixedHeader) Reset() {
	*x = FixedHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixedHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixedHeader) ProtoMessage() {}

func (x *FixedHeader) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixedHeader.ProtoReflect.Descriptor instead.
func (*FixedHeader) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{5}
}

func (x *FixedHeader) GetMessageType() MessageType {
	if x != nil {
		return x.MessageType
	}
	return MessageType_RESERVED
}

func (x *FixedHeader) GetDup() bool {
	if x != nil {
		return x.Dup
	}
	return false
}

func (x *FixedHeader) GetQos() int32 {
	if x != nil {
		return x.Qos
	}
	return 0
}

func (x *FixedHeader) GetRetain() bool {
	if x != nil {
		return x.Retain
	}
	return false
}

func (x *FixedHeader) GetRemainingLength() int32 {
	if x != nil {
		return x.RemainingLength
	}
	return 0
}

// Connect represents a connect packet.
type Conn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtoName     string `protobuf:"bytes,1,opt,name=protoName,proto3" json:"protoName,omitempty"`
	Version       int32  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	InsecureFlag  bool   `protobuf:"varint,3,opt,name=insecureFlag,proto3" json:"insecureFlag,omitempty"`
	UsernameFlag  bool   `protobuf:"varint,4,opt,name=usernameFlag,proto3" json:"usernameFlag,omitempty"`
	PasswordFlag  bool   `protobuf:"varint,5,opt,name=passwordFlag,proto3" json:"passwordFlag,omitempty"`
	CleanSessFlag bool   `protobuf:"varint,6,opt,name=cleanSessFlag,proto3" json:"cleanSessFlag,omitempty"`
	KeepAlive     int32  `protobuf:"varint,7,opt,name=keepAlive,proto3" json:"keepAlive,omitempty"`
	ClientID      string `protobuf:"bytes,8,opt,name=clientID,proto3" json:"clientID,omitempty"`
	Username      string `protobuf:"bytes,9,opt,name=username,proto3" json:"username,omitempty"`
	Password      string `protobuf:"bytes,10,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Conn) Reset() {
	*x = Conn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conn) ProtoMessage() {}

func (x *Conn) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conn.ProtoReflect.Descriptor instead.
func (*Conn) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{6}
}

func (x *Conn) GetProtoName() string {
	if x != nil {
		return x.ProtoName
	}
	return ""
}

func (x *Conn) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Conn) GetInsecureFlag() bool {
	if x != nil {
		return x.InsecureFlag
	}
	return false
}

func (x *Conn) GetUsernameFlag() bool {
	if x != nil {
		return x.UsernameFlag
	}
	return false
}

func (x *Conn) GetPasswordFlag() bool {
	if x != nil {
		return x.PasswordFlag
	}
	return false
}

func (x *Conn) GetCleanSessFlag() bool {
	if x != nil {
		return x.CleanSessFlag
	}
	return false
}

func (x *Conn) GetKeepAlive() int32 {
	if x != nil {
		return x.KeepAlive
	}
	return 0
}

func (x *Conn) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *Conn) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Conn) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Connack represents a connack packet.
// 0x00 connection accepted
// 0x01 refused: unacceptable proto version
// 0x02 refused: identifier rejected
// 0x03 refused server unavailiable
// 0x04 bad user or password
// 0x05 not authorized
type Connack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode int32 `protobuf:"varint,1,opt,name=returnCode,proto3" json:"returnCode,omitempty"`
	ConnID     int32 `protobuf:"varint,2,opt,name=connID,proto3" json:"connID,omitempty"`
}

func (x *Connack) Reset() {
	*x = Connack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connack) ProtoMessage() {}

func (x *Connack) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connack.ProtoReflect.Descriptor instead.
func (*Connack) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{7}
}

func (x *Connack) GetReturnCode() int32 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *Connack) GetConnID() int32 {
	if x != nil {
		return x.ConnID
	}
	return 0
}

//Pingreq is a keepalive
type Pingreq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Pingreq) Reset() {
	*x = Pingreq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pingreq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pingreq) ProtoMessage() {}

func (x *Pingreq) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pingreq.ProtoReflect.Descriptor instead.
func (*Pingreq) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{8}
}

//Pingresp is for saying "hey, the server is alive"
type Pingresp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Pingresp) Reset() {
	*x = Pingresp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pingresp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pingresp) ProtoMessage() {}

func (x *Pingresp) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pingresp.ProtoReflect.Descriptor instead.
func (*Pingresp) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{9}
}

//Disconnect is to signal you want to cease communications with the server
type Disconnect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID int32 `protobuf:"varint,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *Disconnect) Reset() {
	*x = Disconnect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Disconnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disconnect) ProtoMessage() {}

func (x *Disconnect) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disconnect.ProtoReflect.Descriptor instead.
func (*Disconnect) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{10}
}

func (x *Disconnect) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

// QueryRequest represents a query packet.
type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID int32  `protobuf:"varint,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Topic     string `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{11}
}

func (x *QueryRequest) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *QueryRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

// Result is pairing the topic and the results together.
type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Res   []string `protobuf:"bytes,2,rep,name=res,proto3" json:"res,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{12}
}

func (x *Result) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Result) GetRes() []string {
	if x != nil {
		return x.Res
	}
	return nil
}

// QueryResponse is sent to return the result of query
type QueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID int32     `protobuf:"varint,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Results   []*Result `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	Error     string    `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{13}
}

func (x *QueryResponse) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *QueryResponse) GetResults() []*Result {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *QueryResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// PutRequest represents a put packet.
type PutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID int32  `protobuf:"varint,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Topic     string `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Payload   string `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Ttl       string `protobuf:"bytes,4,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *PutRequest) Reset() {
	*x = PutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRequest) ProtoMessage() {}

func (x *PutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRequest.ProtoReflect.Descriptor instead.
func (*PutRequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{14}
}

func (x *PutRequest) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *PutRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *PutRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *PutRequest) GetTtl() string {
	if x != nil {
		return x.Ttl
	}
	return ""
}

// PutResponse is sent to verify the receipt of a put
type PutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID int32  `protobuf:"varint,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Error     string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PutResponse) Reset() {
	*x = PutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutResponse) ProtoMessage() {}

func (x *PutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutResponse.ProtoReflect.Descriptor instead.
func (*PutResponse) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{15}
}

func (x *PutResponse) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *PutResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// DeleteRequest represents a delete packet.
type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID int32  `protobuf:"varint,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Topic     string `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteRequest) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *DeleteRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

// DeleteResponse is sent to verify the receipt of a delete
type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID int32  `protobuf:"varint,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Error     string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteResponse) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *DeleteResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Publish represents a publish packet.
type Publish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID int32  `protobuf:"varint,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Topic     string `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Payload   string `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Qos       int32  `protobuf:"varint,4,opt,name=qos,proto3" json:"qos,omitempty"`
}

func (x *Publish) Reset() {
	*x = Publish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Publish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Publish) ProtoMessage() {}

func (x *Publish) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Publish.ProtoReflect.Descriptor instead.
func (*Publish) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{18}
}

func (x *Publish) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *Publish) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Publish) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *Publish) GetQos() int32 {
	if x != nil {
		return x.Qos
	}
	return 0
}

//Puback is sent for QOS level one to verify the receipt of a publish
//Qot the spec: "A PUBACK Packet is sent by a server in response to a PUBLISH Packet from a publishing client, and by a subscriber in response to a PUBLISH Packet from the server."
type Puback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID int32 `protobuf:"varint,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *Puback) Reset() {
	*x = Puback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Puback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Puback) ProtoMessage() {}

func (x *Puback) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Puback.ProtoReflect.Descriptor instead.
func (*Puback) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{19}
}

func (x *Puback) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

//Pubrec is for verifying the receipt of a publish
//Qoth the spec:"It is the second Packet of the QoS level 2 protocol flow. A PUBREC Packet is sent by the server in response to a PUBLISH Packet from a publishing client, or by a subscriber in response to a PUBLISH Packet from the server."
type Pubrec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID int32 `protobuf:"varint,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Qos       int32 `protobuf:"varint,2,opt,name=qos,proto3" json:"qos,omitempty"`
}

func (x *Pubrec) Reset() {
	*x = Pubrec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pubrec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pubrec) ProtoMessage() {}

func (x *Pubrec) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pubrec.ProtoReflect.Descriptor instead.
func (*Pubrec) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{20}
}

func (x *Pubrec) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *Pubrec) GetQos() int32 {
	if x != nil {
		return x.Qos
	}
	return 0
}

//Pubrel is a response to pubrec from either the client or server.
type Pubrel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID int32 `protobuf:"varint,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Qos       int32 `protobuf:"varint,2,opt,name=qos,proto3" json:"qos,omitempty"`
}

func (x *Pubrel) Reset() {
	*x = Pubrel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pubrel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pubrel) ProtoMessage() {}

func (x *Pubrel) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pubrel.ProtoReflect.Descriptor instead.
func (*Pubrel) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{21}
}

func (x *Pubrel) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *Pubrel) GetQos() int32 {
	if x != nil {
		return x.Qos
	}
	return 0
}

//Pubcomp is for saying is in response to a pubrel sent by the publisher
//the final member of the QOS2 flow. both sides have said "hey, we did it!"
type Pubcomp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID int32 `protobuf:"varint,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *Pubcomp) Reset() {
	*x = Pubcomp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pubcomp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pubcomp) ProtoMessage() {}

func (x *Pubcomp) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pubcomp.ProtoReflect.Descriptor instead.
func (*Pubcomp) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{22}
}

func (x *Pubcomp) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

//Subscriber is pairing the Qos and topic together
//for the QOS' pairs in unsubscribe and subscribe
type Subscriber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic string `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Qos   int32  `protobuf:"varint,3,opt,name=qos,proto3" json:"qos,omitempty"`
}

func (x *Subscriber) Reset() {
	*x = Subscriber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscriber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscriber) ProtoMessage() {}

func (x *Subscriber) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscriber.ProtoReflect.Descriptor instead.
func (*Subscriber) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{23}
}

func (x *Subscriber) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Subscriber) GetQos() int32 {
	if x != nil {
		return x.Qos
	}
	return 0
}

//Subscribe tells the server which topics the client would like to subscribe to
type Subscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID   int32         `protobuf:"varint,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Subscribers []*Subscriber `protobuf:"bytes,2,rep,name=subscribers,proto3" json:"subscribers,omitempty"`
}

func (x *Subscribe) Reset() {
	*x = Subscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscribe) ProtoMessage() {}

func (x *Subscribe) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscribe.ProtoReflect.Descriptor instead.
func (*Subscribe) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{24}
}

func (x *Subscribe) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *Subscribe) GetSubscribers() []*Subscriber {
	if x != nil {
		return x.Subscribers
	}
	return nil
}

//Suback is to say "hey, you got it buddy. I will send you messages that fit this pattern"
type Suback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID int32   `protobuf:"varint,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Qos       []int32 `protobuf:"varint,2,rep,packed,name=qos,proto3" json:"qos,omitempty"`
}

func (x *Suback) Reset() {
	*x = Suback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Suback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Suback) ProtoMessage() {}

func (x *Suback) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Suback.ProtoReflect.Descriptor instead.
func (*Suback) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{25}
}

func (x *Suback) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *Suback) GetQos() []int32 {
	if x != nil {
		return x.Qos
	}
	return nil
}

//Unsubscribe is the Packet to send if you don't want to subscribe to a topic anymore
type Unsubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID   int32         `protobuf:"varint,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	Subscribers []*Subscriber `protobuf:"bytes,2,rep,name=subscribers,proto3" json:"subscribers,omitempty"`
}

func (x *Unsubscribe) Reset() {
	*x = Unsubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unsubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unsubscribe) ProtoMessage() {}

func (x *Unsubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unsubscribe.ProtoReflect.Descriptor instead.
func (*Unsubscribe) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{26}
}

func (x *Unsubscribe) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

func (x *Unsubscribe) GetSubscribers() []*Subscriber {
	if x != nil {
		return x.Subscribers
	}
	return nil
}

//Unsuback is to unsubscribe as suback is to subscribe
type Unsuback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID int32 `protobuf:"varint,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
}

func (x *Unsuback) Reset() {
	*x = Unsuback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unsuback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unsuback) ProtoMessage() {}

func (x *Unsuback) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unsuback.ProtoReflect.Descriptor instead.
func (*Unsuback) Descriptor() ([]byte, []int) {
	return file_schema_proto_rawDescGZIP(), []int{27}
}

func (x *Unsuback) GetMessageID() int32 {
	if x != nil {
		return x.MessageID
	}
	return 0
}

var File_schema_proto protoreflect.FileDescriptor

var file_schema_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x75, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x07, 0x0a,
	0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1c, 0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x5b, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0xea, 0x02, 0x0a, 0x05, 0x49, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x07, 0x70,
	0x69, 0x6e, 0x67, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75,
	0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x50, 0x69, 0x6e,
	0x67, 0x72, 0x65, 0x71, 0x48, 0x00, 0x52, 0x07, 0x70, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x71, 0x12,
	0x2c, 0x0a, 0x03, 0x73, 0x75, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75,
	0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x48, 0x00, 0x52, 0x03, 0x73, 0x75, 0x62, 0x12, 0x32, 0x0a,
	0x05, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75,
	0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x55, 0x6e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x48, 0x00, 0x52, 0x05, 0x75, 0x6e, 0x73, 0x75,
	0x62, 0x12, 0x2a, 0x0a, 0x03, 0x70, 0x75, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x75, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x48, 0x00, 0x52, 0x03, 0x70, 0x75, 0x62, 0x12, 0x33, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75,
	0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x2d, 0x0a, 0x03, 0x70, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x03, 0x70, 0x75,
	0x74, 0x12, 0x30, 0x0a, 0x03, 0x64, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x75, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x03,
	0x64, 0x65, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb6,
	0x03, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x69, 0x6e,
	0x67, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x75, 0x6e,
	0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x50, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x08, 0x70, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x70,
	0x12, 0x2f, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x53, 0x75, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x06, 0x73, 0x75, 0x62, 0x61, 0x63,
	0x6b, 0x12, 0x35, 0x0a, 0x08, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x08,
	0x75, 0x6e, 0x73, 0x75, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x03, 0x70, 0x75, 0x62, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x48, 0x00, 0x52,
	0x03, 0x70, 0x75, 0x62, 0x12, 0x2f, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x50, 0x75, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x06, 0x70,
	0x75, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x32, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x75, 0x74,
	0x72, 0x65, 0x73, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x6e, 0x69,
	0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x07, 0x70, 0x75, 0x74, 0x72, 0x65, 0x73,
	0x70, 0x12, 0x39, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x72, 0x65, 0x73, 0x70, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x72, 0x65, 0x73, 0x70, 0x42, 0x09, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x0b, 0x46, 0x69, 0x78, 0x65,
	0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x75,
	0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x64, 0x75, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x6f, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74,
	0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x74, 0x61, 0x69,
	0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0xc2, 0x02, 0x0a, 0x04,
	0x43, 0x6f, 0x6e, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x46, 0x6c, 0x61, 0x67,
	0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x6c, 0x61, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x65, 0x61,
	0x6e, 0x53, 0x65, 0x73, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c,
	0x0a, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x41, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x61, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x6e, 0x49, 0x44, 0x22, 0x09, 0x0a, 0x07, 0x50, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x71, 0x22, 0x0a,
	0x0a, 0x08, 0x50, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x70, 0x22, 0x2a, 0x0a, 0x0a, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0x42, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x30, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x73, 0x22, 0x74, 0x0a, 0x0d,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75,
	0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x6c, 0x0a, 0x0a, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x74, 0x6c,
	0x22, 0x41, 0x0a, 0x0b, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x43, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x44, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x69,
	0x0a, 0x07, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x6f, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x6f, 0x73, 0x22, 0x26, 0x0a, 0x06, 0x50, 0x75, 0x62,
	0x61, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x22, 0x38, 0x0a, 0x06, 0x50, 0x75, 0x62, 0x72, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x6f, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x6f, 0x73, 0x22, 0x38, 0x0a, 0x06, 0x50,
	0x75, 0x62, 0x72, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x71, 0x6f, 0x73, 0x22, 0x27, 0x0a, 0x07, 0x50, 0x75, 0x62, 0x63, 0x6f, 0x6d, 0x70,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0x34,
	0x0a, 0x0a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x71, 0x6f, 0x73, 0x22, 0x66, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12,
	0x3b, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52,
	0x0b, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x22, 0x38, 0x0a, 0x06,
	0x53, 0x75, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x03, 0x71, 0x6f, 0x73, 0x22, 0x68, 0x0a, 0x0b, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x64,
	0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73,
	0x22, 0x28, 0x0a, 0x08, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x2a, 0x9b, 0x02, 0x0a, 0x0b, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45,
	0x53, 0x45, 0x52, 0x56, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4e, 0x4e,
	0x45, 0x43, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4e, 0x4e, 0x41, 0x43, 0x4b,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x50, 0x55, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x50,
	0x55, 0x42, 0x52, 0x45, 0x43, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x55, 0x42, 0x52, 0x45,
	0x4c, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x55, 0x42, 0x43, 0x4f, 0x4d, 0x50, 0x10, 0x07,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x10, 0x08, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x55, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x4e, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08,
	0x55, 0x4e, 0x53, 0x55, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x0b, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x49,
	0x4e, 0x47, 0x52, 0x45, 0x51, 0x10, 0x0c, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x49, 0x4e, 0x47, 0x52,
	0x45, 0x53, 0x50, 0x10, 0x0d, 0x12, 0x09, 0x0a, 0x05, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0x0e,
	0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x10, 0x0f, 0x12, 0x07, 0x0a, 0x03,
	0x50, 0x55, 0x54, 0x10, 0x10, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x55, 0x54, 0x52, 0x45, 0x53, 0x50,
	0x10, 0x11, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x45, 0x4c, 0x10, 0x12, 0x12, 0x0b, 0x0a, 0x07, 0x44,
	0x45, 0x4c, 0x52, 0x45, 0x53, 0x50, 0x10, 0x13, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x49, 0x53, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x14, 0x32, 0xb7, 0x01, 0x0a, 0x06, 0x55, 0x6e, 0x69,
	0x74, 0x64, 0x62, 0x12, 0x3b, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x17, 0x2e, 0x75,
	0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x17, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x15, 0x2e, 0x75, 0x6e, 0x69,
	0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x1a, 0x15, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x28, 0x01, 0x30, 0x01, 0x12, 0x34, 0x0a, 0x04,
	0x53, 0x74, 0x6f, 0x70, 0x12, 0x14, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x75, 0x6e, 0x69,
	0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_schema_proto_rawDescOnce sync.Once
	file_schema_proto_rawDescData = file_schema_proto_rawDesc
)

func file_schema_proto_rawDescGZIP() []byte {
	file_schema_proto_rawDescOnce.Do(func() {
		file_schema_proto_rawDescData = protoimpl.X.CompressGZIP(file_schema_proto_rawDescData)
	})
	return file_schema_proto_rawDescData
}

var file_schema_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_schema_proto_goTypes = []interface{}{
	(MessageType)(0),       // 0: unitdb.schema.MessageType
	(*Empty)(nil),          // 1: unitdb.schema.Empty
	(*Packet)(nil),         // 2: unitdb.schema.Packet
	(*ConnInfo)(nil),       // 3: unitdb.schema.ConnInfo
	(*InMsg)(nil),          // 4: unitdb.schema.InMsg
	(*OutMsg)(nil),         // 5: unitdb.schema.OutMsg
	(*FixedHeader)(nil),    // 6: unitdb.schema.FixedHeader
	(*Conn)(nil),           // 7: unitdb.schema.Conn
	(*Connack)(nil),        // 8: unitdb.schema.Connack
	(*Pingreq)(nil),        // 9: unitdb.schema.Pingreq
	(*Pingresp)(nil),       // 10: unitdb.schema.Pingresp
	(*Disconnect)(nil),     // 11: unitdb.schema.Disconnect
	(*QueryRequest)(nil),   // 12: unitdb.schema.QueryRequest
	(*Result)(nil),         // 13: unitdb.schema.Result
	(*QueryResponse)(nil),  // 14: unitdb.schema.QueryResponse
	(*PutRequest)(nil),     // 15: unitdb.schema.PutRequest
	(*PutResponse)(nil),    // 16: unitdb.schema.PutResponse
	(*DeleteRequest)(nil),  // 17: unitdb.schema.DeleteRequest
	(*DeleteResponse)(nil), // 18: unitdb.schema.DeleteResponse
	(*Publish)(nil),        // 19: unitdb.schema.Publish
	(*Puback)(nil),         // 20: unitdb.schema.Puback
	(*Pubrec)(nil),         // 21: unitdb.schema.Pubrec
	(*Pubrel)(nil),         // 22: unitdb.schema.Pubrel
	(*Pubcomp)(nil),        // 23: unitdb.schema.Pubcomp
	(*Subscriber)(nil),     // 24: unitdb.schema.Subscriber
	(*Subscribe)(nil),      // 25: unitdb.schema.Subscribe
	(*Suback)(nil),         // 26: unitdb.schema.Suback
	(*Unsubscribe)(nil),    // 27: unitdb.schema.Unsubscribe
	(*Unsuback)(nil),       // 28: unitdb.schema.Unsuback
}
var file_schema_proto_depIdxs = []int32{
	9,  // 0: unitdb.schema.InMsg.pingreq:type_name -> unitdb.schema.Pingreq
	25, // 1: unitdb.schema.InMsg.sub:type_name -> unitdb.schema.Subscribe
	27, // 2: unitdb.schema.InMsg.unsub:type_name -> unitdb.schema.Unsubscribe
	19, // 3: unitdb.schema.InMsg.pub:type_name -> unitdb.schema.Publish
	12, // 4: unitdb.schema.InMsg.query:type_name -> unitdb.schema.QueryRequest
	15, // 5: unitdb.schema.InMsg.put:type_name -> unitdb.schema.PutRequest
	17, // 6: unitdb.schema.InMsg.del:type_name -> unitdb.schema.DeleteRequest
	10, // 7: unitdb.schema.OutMsg.pingresp:type_name -> unitdb.schema.Pingresp
	26, // 8: unitdb.schema.OutMsg.suback:type_name -> unitdb.schema.Suback
	28, // 9: unitdb.schema.OutMsg.unsuback:type_name -> unitdb.schema.Unsuback
	19, // 10: unitdb.schema.OutMsg.pub:type_name -> unitdb.schema.Publish
	20, // 11: unitdb.schema.OutMsg.puback:type_name -> unitdb.schema.Puback
	14, // 12: unitdb.schema.OutMsg.resp:type_name -> unitdb.schema.QueryResponse
	16, // 13: unitdb.schema.OutMsg.putresp:type_name -> unitdb.schema.PutResponse
	18, // 14: unitdb.schema.OutMsg.delresp:type_name -> unitdb.schema.DeleteResponse
	0,  // 15: unitdb.schema.FixedHeader.messageType:type_name -> unitdb.schema.MessageType
	13, // 16: unitdb.schema.QueryResponse.results:type_name -> unitdb.schema.Result
	24, // 17: unitdb.schema.Subscribe.subscribers:type_name -> unitdb.schema.Subscriber
	24, // 18: unitdb.schema.Unsubscribe.subscribers:type_name -> unitdb.schema.Subscriber
	3,  // 19: unitdb.schema.Unitdb.Start:input_type -> unitdb.schema.ConnInfo
	2,  // 20: unitdb.schema.Unitdb.Stream:input_type -> unitdb.schema.Packet
	1,  // 21: unitdb.schema.Unitdb.Stop:input_type -> unitdb.schema.Empty
	3,  // 22: unitdb.schema.Unitdb.Start:output_type -> unitdb.schema.ConnInfo
	2,  // 23: unitdb.schema.Unitdb.Stream:output_type -> unitdb.schema.Packet
	1,  // 24: unitdb.schema.Unitdb.Stop:output_type -> unitdb.schema.Empty
	22, // [22:25] is the sub-list for method output_type
	19, // [19:22] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_schema_proto_init() }
func file_schema_proto_init() {
	if File_schema_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_schema_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Packet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixedHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pingreq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pingresp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Disconnect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Publish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Puback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pubrec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pubrel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pubcomp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscriber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Suback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unsubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unsuback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_schema_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*InMsg_Pingreq)(nil),
		(*InMsg_Sub)(nil),
		(*InMsg_Unsub)(nil),
		(*InMsg_Pub)(nil),
		(*InMsg_Query)(nil),
		(*InMsg_Put)(nil),
		(*InMsg_Del)(nil),
	}
	file_schema_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*OutMsg_Pingresp)(nil),
		(*OutMsg_Suback)(nil),
		(*OutMsg_Unsuback)(nil),
		(*OutMsg_Pub)(nil),
		(*OutMsg_Puback)(nil),
		(*OutMsg_Resp)(nil),
		(*OutMsg_Putresp)(nil),
		(*OutMsg_Delresp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schema_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_schema_proto_goTypes,
		DependencyIndexes: file_schema_proto_depIdxs,
		EnumInfos:         file_schema_proto_enumTypes,
		MessageInfos:      file_schema_proto_msgTypes,
	}.Build()
	File_schema_proto = out.File
	file_schema_proto_rawDesc = nil
	file_schema_proto_goTypes = nil
	file_schema_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UnitdbClient is the client API for Unitdb service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UnitdbClient interface {
	Start(ctx context.Context, in *ConnInfo, opts ...grpc.CallOption) (*ConnInfo, error)
	Stream(ctx context.Context, opts ...grpc.CallOption) (Unitdb_StreamClient, error)
	Stop(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
}

type unitdbClient struct {
	cc grpc.ClientConnInterface
}

func NewUnitdbClient(cc grpc.ClientConnInterface) UnitdbClient {
	return &unitdbClient{cc}
}

func (c *unitdbClient) Start(ctx context.Context, in *ConnInfo, opts ...grpc.CallOption) (*ConnInfo, error) {
	out := new(ConnInfo)
	err := c.cc.Invoke(ctx, "/unitdb.schema.Unitdb/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unitdbClient) Stream(ctx context.Context, opts ...grpc.CallOption) (Unitdb_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Unitdb_serviceDesc.Streams[0], "/unitdb.schema.Unitdb/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &unitdbStreamClient{stream}
	return x, nil
}

type Unitdb_StreamClient interface {
	Send(*Packet) error
	Recv() (*Packet, error)
	grpc.ClientStream
}

type unitdbStreamClient struct {
	grpc.ClientStream
}

func (x *unitdbStreamClient) Send(m *Packet) error {
	return x.ClientStream.SendMsg(m)
}

func (x *unitdbStreamClient) Recv() (*Packet, error) {
	m := new(Packet)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *unitdbClient) Stop(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/unitdb.schema.Unitdb/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UnitdbServer is the server API for Unitdb service.
type UnitdbServer interface {
	Start(context.Context, *ConnInfo) (*ConnInfo, error)
	Stream(Unitdb_StreamServer) error
	Stop(context.Context, *Empty) (*Empty, error)
}

// UnimplementedUnitdbServer can be embedded to have forward compatible implementations.
type UnimplementedUnitdbServer struct {
}

func (*UnimplementedUnitdbServer) Start(context.Context, *ConnInfo) (*ConnInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}
func (*UnimplementedUnitdbServer) Stream(Unitdb_StreamServer) error {
	return status.Errorf(codes.Unimplemented, "method Stream not implemented")
}
func (*UnimplementedUnitdbServer) Stop(context.Context, *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}

func RegisterUnitdbServer(s *grpc.Server, srv UnitdbServer) {
	s.RegisterService(&_Unitdb_serviceDesc, srv)
}

func _Unitdb_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnitdbServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/unitdb.schema.Unitdb/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnitdbServer).Start(ctx, req.(*ConnInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Unitdb_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(UnitdbServer).Stream(&unitdbStreamServer{stream})
}

type Unitdb_StreamServer interface {
	Send(*Packet) error
	Recv() (*Packet, error)
	grpc.ServerStream
}

type unitdbStreamServer struct {
	grpc.ServerStream
}

func (x *unitdbStreamServer) Send(m *Packet) error {
	return x.ServerStream.SendMsg(m)
}

func (x *unitdbStreamServer) Recv() (*Packet, error) {
	m := new(Packet)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Unitdb_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnitdbServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/unitdb.schema.Unitdb/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnitdbServer).Stop(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Unitdb_serviceDesc = grpc.ServiceDesc{
	ServiceName: "unitdb.schema.Unitdb",
	HandlerType: (*UnitdbServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Start",
			Handler:    _Unitdb_Start_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _Unitdb_Stop_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _Unitdb_Stream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "schema.proto",
}
